apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: replay-demo
    component: postgres
data:
  init-user-db.sh: |
                      #!/bin/bash
                      set -e

                      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
                          CREATE USER replyloader PASSWORD '123456';
                          CREATE DATABASE shares;
                          GRANT ALL PRIVILEGES ON DATABASE shares TO replyloader;
                      EOSQL

                      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "shares" <<-EOSQL
                          CREATE TABLE IF NOT EXISTS shares (symbol VARCHAR(4) PRIMARY KEY, amount INT);
                          GRANT ALL PRIVILEGES ON TABLE shares TO replyloader;
                      EOSQL
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: replay-demo
    component: postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: replay-demo
        component: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /docker-entrypoint-initdb.d
              name: init-db
      volumes:
        - name: postgredb
          emptyDir: {}
        - name: init-db
          configMap:
            name: postgres-config
            items:
              - key: init-user-db.sh
                path: init-user-db.sh
---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: replay-demo
    component: postgres
spec:
  type: ClusterIP
  ports:
   - port: 5432
  selector:
    app: replay-demo
    component: postgres